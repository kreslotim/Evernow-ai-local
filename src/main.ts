import './instrument';

import { NestFactory } from '@nestjs/core';
import { ValidationPipe } from '@nestjs/common';
import { SwaggerModule } from './core/modules/swagger/swagger.module';
import { AppModule } from './core/modules/app/app.module';
import { ConfigService } from './core/modules/config/config.service';
import { NestExpressApplication } from '@nestjs/platform-express';
import * as path from 'path';
import * as express from 'express';

async function bootstrap() {
  const app = await NestFactory.create<NestExpressApplication>(AppModule);
  app.setGlobalPrefix('api', { exclude: ['panel*', 'mini-app*'] });

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤ –¥–ª—è –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  const staticPath =
    process.env.NODE_ENV === 'production'
      ? path.join(__dirname, 'core', 'modules', 'mini-app', 'static')
      : path.join(process.cwd(), 'src', 'core', 'modules', 'mini-app', 'static');

  console.log(`üìÅ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤: ${staticPath}`);
  console.log(`üìÅ NODE_ENV: ${process.env.NODE_ENV}`);
  console.log(`üìÅ __dirname: ${__dirname}`);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
  const fs = require('fs');
  if (fs.existsSync(staticPath)) {
    console.log(`‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤ –Ω–∞–π–¥–µ–Ω–∞: ${staticPath}`);
    const files = fs.readdirSync(staticPath);
    console.log(`üìÑ –§–∞–π–ª—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: ${files.join(', ')}`);
  } else {
    console.error(`‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤ –ù–ï –Ω–∞–π–¥–µ–Ω–∞: ${staticPath}`);
  }

  // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–º —Ñ–∞–π–ª–∞–º –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
  app.use('/mini-app', (req, res, next) => {
    console.log(`üîç –ó–∞–ø—Ä–æ—Å –∫ –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é: ${req.method} ${req.url}`);
    next();
  });

  // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Express –¥–ª—è —Ä–∞–∑–¥–∞—á–∏ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤ –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  // –†–∞–∑–¥–∞–µ–º CSS –∏ JS —Ñ–∞–π–ª—ã —á–µ—Ä–µ–∑ static middleware
  app.use(
    '/mini-app/app',
    express.static(staticPath, {
      maxAge: process.env.NODE_ENV === 'production' ? '1d' : '0',
      etag: true,
      lastModified: true,
      index: false, // –û—Ç–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é —Ä–∞–∑–¥–∞—á—É index.html, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ –¥–µ–ª–∞–µ—Ç –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä
      setHeaders: (res, path) => {
        console.log(`üì§ –†–∞–∑–¥–∞—á–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ñ–∞–π–ª–∞: ${path}`);
        if (path.endsWith('.css')) {
          res.setHeader('Content-Type', 'text/css; charset=utf-8');
        } else if (path.endsWith('.js')) {
          res.setHeader('Content-Type', 'application/javascript; charset=utf-8');
        }
      },
    }),
  );

  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
  app.use(
    '/mini-app/static',
    express.static(staticPath, {
      maxAge: process.env.NODE_ENV === 'production' ? '1d' : '0',
      etag: true,
      lastModified: true,
    }),
  );

  // –†–∞–∑–¥–∞—á–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤ –ø–æ –ø—É—Ç–∏ —Å –≥–ª–æ–±–∞–ª—å–Ω—ã–º –ø—Ä–µ—Ñ–∏–∫—Å–æ–º /api –¥–ª—è –ø—Ä—è–º—ã—Ö —Å—Å—ã–ª–æ–∫ –∏–∑ HTML
  app.use(
    '/api/mini-app',
    express.static(staticPath, {
      maxAge: process.env.NODE_ENV === 'production' ? '1d' : '0',
      etag: true,
      lastModified: true,
    }),
  );

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
  const uploadsPath = path.join(process.cwd(), 'uploads');
  console.log(`üìÅ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤ –¥–ª—è uploads: ${uploadsPath}`);

  // –†–∞–∑–¥–∞—á–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ (—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –∏ –¥—Ä—É–≥–∏—Ö)
  app.use(
    '/uploads',
    express.static(uploadsPath, {
      maxAge: process.env.NODE_ENV === 'production' ? '7d' : '0', // –î–æ–ª—å—à–µ –∫—ç—à–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
      etag: true,
      lastModified: true,
      setHeaders: (res, filePath) => {
        console.log(`üì§ –†–∞–∑–¥–∞—á–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞: ${filePath}`);
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ MIME —Ç–∏–ø—ã –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        if (filePath.match(/\.(jpg|jpeg|png|gif|webp)$/i)) {
          const ext = path.extname(filePath).toLowerCase();
          const mimeTypes = {
            '.jpg': 'image/jpeg',
            '.jpeg': 'image/jpeg',
            '.png': 'image/png',
            '.gif': 'image/gif',
            '.webp': 'image/webp',
          };
          res.setHeader('Content-Type', mimeTypes[ext] || 'image/jpeg');
        }
      },
    }),
  );

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ CORS –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ Telegram Mini Apps
  const config = app.get(ConfigService);
  const corsOptions =
    config.isProduction()
      ? {
        origin: [
          'https://web.telegram.org',
          'https://telegram.org',
          // –î–æ–±–∞–≤—å—Ç–µ –≤–∞—à –¥–æ–º–µ–Ω –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –æ—Ç–¥–µ–ª—å–Ω—ã–π
        ],
        credentials: true,
        methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],
        allowedHeaders: ['Content-Type', 'Authorization', 'X-Telegram-Init-Data'],
      }
      :
      { origin: '*' }; // –í dev —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–µ—à–∞–µ–º –≤—Å–µ

  app.enableCors(corsOptions);
  app.useGlobalPipes(new ValidationPipe({ transform: true }));

  const swagger = app.get(SwaggerModule);
  swagger.use(app);
  swagger.config();

  const configService = app.get(ConfigService);
  const port = configService.getAppPort();

  await app.listen(port);
}
bootstrap();
